{"ast":null,"code":"var TYPE = require('../../tokenizer').TYPE;\n\nvar WHITESPACE = TYPE.WhiteSpace;\nvar COMMENT = TYPE.Comment;\nvar ATKEYWORD = TYPE.AtKeyword;\nvar CDO = TYPE.CDO;\nvar CDC = TYPE.CDC;\nvar EXCLAMATIONMARK = 0x0021; // U+0021 EXCLAMATION MARK (!)\n\nfunction consumeRaw(startToken) {\n  return this.Raw(startToken, null, false);\n}\n\nmodule.exports = {\n  name: 'StyleSheet',\n  structure: {\n    children: [['Comment', 'CDO', 'CDC', 'Atrule', 'Rule', 'Raw']]\n  },\n  parse: function () {\n    var start = this.scanner.tokenStart;\n    var children = this.createList();\n    var child;\n\n    scan: while (!this.scanner.eof) {\n      switch (this.scanner.tokenType) {\n        case WHITESPACE:\n          this.scanner.next();\n          continue;\n\n        case COMMENT:\n          // ignore comments except exclamation comments (i.e. /*! .. */) on top level\n          if (this.scanner.source.charCodeAt(this.scanner.tokenStart + 2) !== EXCLAMATIONMARK) {\n            this.scanner.next();\n            continue;\n          }\n\n          child = this.Comment();\n          break;\n\n        case CDO:\n          // <!--\n          child = this.CDO();\n          break;\n\n        case CDC:\n          // -->\n          child = this.CDC();\n          break;\n        // CSS Syntax Module Level 3\n        // ยง2.2 Error handling\n        // At the \"top level\" of a stylesheet, an <at-keyword-token> starts an at-rule.\n\n        case ATKEYWORD:\n          child = this.parseWithFallback(this.Atrule, consumeRaw);\n          break;\n        // Anything else starts a qualified rule ...\n\n        default:\n          child = this.parseWithFallback(this.Rule, consumeRaw);\n      }\n\n      children.push(child);\n    }\n\n    return {\n      type: 'StyleSheet',\n      loc: this.getLocation(start, this.scanner.tokenStart),\n      children: children\n    };\n  },\n  generate: function (node) {\n    this.children(node);\n  },\n  walkContext: 'stylesheet'\n};","map":{"version":3,"sources":["/Users/macbook/Documents/GitHub/React 3/billing-app/node_modules/react-pdf-html/node_modules/css-tree/lib/syntax/node/StyleSheet.js"],"names":["TYPE","require","WHITESPACE","WhiteSpace","COMMENT","Comment","ATKEYWORD","AtKeyword","CDO","CDC","EXCLAMATIONMARK","consumeRaw","startToken","Raw","module","exports","name","structure","children","parse","start","scanner","tokenStart","createList","child","scan","eof","tokenType","next","source","charCodeAt","parseWithFallback","Atrule","Rule","push","type","loc","getLocation","generate","node","walkContext"],"mappings":"AAAA,IAAIA,IAAI,GAAGC,OAAO,CAAC,iBAAD,CAAP,CAA2BD,IAAtC;;AAEA,IAAIE,UAAU,GAAGF,IAAI,CAACG,UAAtB;AACA,IAAIC,OAAO,GAAGJ,IAAI,CAACK,OAAnB;AACA,IAAIC,SAAS,GAAGN,IAAI,CAACO,SAArB;AACA,IAAIC,GAAG,GAAGR,IAAI,CAACQ,GAAf;AACA,IAAIC,GAAG,GAAGT,IAAI,CAACS,GAAf;AACA,IAAIC,eAAe,GAAG,MAAtB,C,CAA8B;;AAE9B,SAASC,UAAT,CAAoBC,UAApB,EAAgC;AAC5B,SAAO,KAAKC,GAAL,CAASD,UAAT,EAAqB,IAArB,EAA2B,KAA3B,CAAP;AACH;;AAEDE,MAAM,CAACC,OAAP,GAAiB;AACbC,EAAAA,IAAI,EAAE,YADO;AAEbC,EAAAA,SAAS,EAAE;AACPC,IAAAA,QAAQ,EAAE,CAAC,CACP,SADO,EAEP,KAFO,EAGP,KAHO,EAIP,QAJO,EAKP,MALO,EAMP,KANO,CAAD;AADH,GAFE;AAYbC,EAAAA,KAAK,EAAE,YAAW;AACd,QAAIC,KAAK,GAAG,KAAKC,OAAL,CAAaC,UAAzB;AACA,QAAIJ,QAAQ,GAAG,KAAKK,UAAL,EAAf;AACA,QAAIC,KAAJ;;AAEAC,IAAAA,IAAI,EACJ,OAAO,CAAC,KAAKJ,OAAL,CAAaK,GAArB,EAA0B;AACtB,cAAQ,KAAKL,OAAL,CAAaM,SAArB;AACI,aAAKzB,UAAL;AACI,eAAKmB,OAAL,CAAaO,IAAb;AACA;;AAEJ,aAAKxB,OAAL;AACI;AACA,cAAI,KAAKiB,OAAL,CAAaQ,MAAb,CAAoBC,UAApB,CAA+B,KAAKT,OAAL,CAAaC,UAAb,GAA0B,CAAzD,MAAgEZ,eAApE,EAAqF;AACjF,iBAAKW,OAAL,CAAaO,IAAb;AACA;AACH;;AAEDJ,UAAAA,KAAK,GAAG,KAAKnB,OAAL,EAAR;AACA;;AAEJ,aAAKG,GAAL;AAAU;AACNgB,UAAAA,KAAK,GAAG,KAAKhB,GAAL,EAAR;AACA;;AAEJ,aAAKC,GAAL;AAAU;AACNe,UAAAA,KAAK,GAAG,KAAKf,GAAL,EAAR;AACA;AAEJ;AACA;AACA;;AACA,aAAKH,SAAL;AACIkB,UAAAA,KAAK,GAAG,KAAKO,iBAAL,CAAuB,KAAKC,MAA5B,EAAoCrB,UAApC,CAAR;AACA;AAEJ;;AACA;AACIa,UAAAA,KAAK,GAAG,KAAKO,iBAAL,CAAuB,KAAKE,IAA5B,EAAkCtB,UAAlC,CAAR;AAhCR;;AAmCAO,MAAAA,QAAQ,CAACgB,IAAT,CAAcV,KAAd;AACH;;AAED,WAAO;AACHW,MAAAA,IAAI,EAAE,YADH;AAEHC,MAAAA,GAAG,EAAE,KAAKC,WAAL,CAAiBjB,KAAjB,EAAwB,KAAKC,OAAL,CAAaC,UAArC,CAFF;AAGHJ,MAAAA,QAAQ,EAAEA;AAHP,KAAP;AAKH,GA9DY;AA+DboB,EAAAA,QAAQ,EAAE,UAASC,IAAT,EAAe;AACrB,SAAKrB,QAAL,CAAcqB,IAAd;AACH,GAjEY;AAkEbC,EAAAA,WAAW,EAAE;AAlEA,CAAjB","sourcesContent":["var TYPE = require('../../tokenizer').TYPE;\n\nvar WHITESPACE = TYPE.WhiteSpace;\nvar COMMENT = TYPE.Comment;\nvar ATKEYWORD = TYPE.AtKeyword;\nvar CDO = TYPE.CDO;\nvar CDC = TYPE.CDC;\nvar EXCLAMATIONMARK = 0x0021; // U+0021 EXCLAMATION MARK (!)\n\nfunction consumeRaw(startToken) {\n    return this.Raw(startToken, null, false);\n}\n\nmodule.exports = {\n    name: 'StyleSheet',\n    structure: {\n        children: [[\n            'Comment',\n            'CDO',\n            'CDC',\n            'Atrule',\n            'Rule',\n            'Raw'\n        ]]\n    },\n    parse: function() {\n        var start = this.scanner.tokenStart;\n        var children = this.createList();\n        var child;\n\n        scan:\n        while (!this.scanner.eof) {\n            switch (this.scanner.tokenType) {\n                case WHITESPACE:\n                    this.scanner.next();\n                    continue;\n\n                case COMMENT:\n                    // ignore comments except exclamation comments (i.e. /*! .. */) on top level\n                    if (this.scanner.source.charCodeAt(this.scanner.tokenStart + 2) !== EXCLAMATIONMARK) {\n                        this.scanner.next();\n                        continue;\n                    }\n\n                    child = this.Comment();\n                    break;\n\n                case CDO: // <!--\n                    child = this.CDO();\n                    break;\n\n                case CDC: // -->\n                    child = this.CDC();\n                    break;\n\n                // CSS Syntax Module Level 3\n                // ยง2.2 Error handling\n                // At the \"top level\" of a stylesheet, an <at-keyword-token> starts an at-rule.\n                case ATKEYWORD:\n                    child = this.parseWithFallback(this.Atrule, consumeRaw);\n                    break;\n\n                // Anything else starts a qualified rule ...\n                default:\n                    child = this.parseWithFallback(this.Rule, consumeRaw);\n            }\n\n            children.push(child);\n        }\n\n        return {\n            type: 'StyleSheet',\n            loc: this.getLocation(start, this.scanner.tokenStart),\n            children: children\n        };\n    },\n    generate: function(node) {\n        this.children(node);\n    },\n    walkContext: 'stylesheet'\n};\n"]},"metadata":{},"sourceType":"script"}