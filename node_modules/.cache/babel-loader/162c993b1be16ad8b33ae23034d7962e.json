{"ast":null,"code":"var _jsxFileName = \"/Users/macbook/Documents/GitHub/React 3/billing-app/src/Components/Charts.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport { LineChart, Bar, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from 'recharts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Charts = props => {\n  _s();\n\n  const bills = useSelector(state => {\n    return state.user.bills.data;\n  });\n  const [design, setDesign] = useState([]);\n  useEffect(() => {\n    const result = bills.slice(-8).reverse().map(ele => {\n      return {\n        date: ele.date.slice(0, 10),\n        total: ele.total\n      };\n    });\n    const output = result.reduce((accumulator, cur) => {\n      let date = cur.date;\n      let found = accumulator.find(elem => elem.date == date);\n      if (found) found.total += cur.total;else accumulator.push(cur);\n      return accumulator;\n    }, []);\n    setDesign(output);\n  }, [bills]);\n  console.log('in', design); //console.log(\"out\", result)\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n      width: '100%',\n      height: 400,\n      children: /*#__PURE__*/_jsxDEV(LineChart, {\n        data: design,\n        children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n          strokeDasharray: \"3 3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n          dataKey: \"date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Line, {\n          dataKey: \"total\",\n          fill: \"#82ca9d\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(Charts, \"yWOhBLQ30RVpoESEctBzNs2IfZY=\", false, function () {\n  return [useSelector];\n});\n\n_c = Charts;\nexport default Charts;\n\nvar _c;\n\n$RefreshReg$(_c, \"Charts\");","map":{"version":3,"sources":["/Users/macbook/Documents/GitHub/React 3/billing-app/src/Components/Charts.js"],"names":["React","useState","useEffect","useSelector","LineChart","Bar","Line","XAxis","YAxis","CartesianGrid","Tooltip","Legend","ResponsiveContainer","Charts","props","bills","state","user","data","design","setDesign","result","slice","reverse","map","ele","date","total","output","reduce","accumulator","cur","found","find","elem","push","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SACIC,SADJ,EACeC,GADf,EACoBC,IADpB,EAC0BC,KAD1B,EACiCC,KADjC,EACwCC,aADxC,EACuDC,OADvD,EACgEC,MADhE,EACwEC,mBADxE,QAEO,UAFP;;;;AAGA,MAAMC,MAAM,GAAGC,KAAK,IAAI;AAAA;;AACpB,QAAMC,KAAK,GAAGZ,WAAW,CAAEa,KAAD,IAAW;AACjC,WAAOA,KAAK,CAACC,IAAN,CAAWF,KAAX,CAAiBG,IAAxB;AACH,GAFwB,CAAzB;AAIA,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBnB,QAAQ,CAAC,EAAD,CAApC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMmB,MAAM,GAAGN,KAAK,CAACO,KAAN,CAAY,CAAC,CAAb,EAAgBC,OAAhB,GAA0BC,GAA1B,CAA+BC,GAAD,IAAS;AAClD,aAAO;AAAEC,QAAAA,IAAI,EAAED,GAAG,CAACC,IAAJ,CAASJ,KAAT,CAAe,CAAf,EAAkB,EAAlB,CAAR;AAA+BK,QAAAA,KAAK,EAAEF,GAAG,CAACE;AAA1C,OAAP;AACH,KAFc,CAAf;AAIA,UAAMC,MAAM,GAAGP,MAAM,CAACQ,MAAP,CAAc,CAACC,WAAD,EAAcC,GAAd,KAAsB;AAC/C,UAAIL,IAAI,GAAGK,GAAG,CAACL,IAAf;AACA,UAAIM,KAAK,GAAGF,WAAW,CAACG,IAAZ,CAAiBC,IAAI,IAAIA,IAAI,CAACR,IAAL,IAAaA,IAAtC,CAAZ;AACA,UAAIM,KAAJ,EAAWA,KAAK,CAACL,KAAN,IAAeI,GAAG,CAACJ,KAAnB,CAAX,KACKG,WAAW,CAACK,IAAZ,CAAiBJ,GAAjB;AACL,aAAOD,WAAP;AACH,KANc,EAMZ,EANY,CAAf;AAQAV,IAAAA,SAAS,CAACQ,MAAD,CAAT;AACH,GAdQ,EAcN,CAACb,KAAD,CAdM,CAAT;AAiBAqB,EAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ,EAAkBlB,MAAlB,EAxBoB,CA6BpB;;AAEA,sBACI;AAAA,2BACI,QAAC,mBAAD;AAAqB,MAAA,KAAK,EAAE,MAA5B;AAAoC,MAAA,MAAM,EAAE,GAA5C;AAAA,6BACI,QAAC,SAAD;AAAW,QAAA,IAAI,EAAEA,MAAjB;AAAA,gCACI,QAAC,aAAD;AAAe,UAAA,eAAe,EAAC;AAA/B;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,QAAC,KAAD;AAAO,UAAA,OAAO,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAGI,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,gBAHJ,eAII,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,gBAJJ,eAKI,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,gBALJ,eAMI,QAAC,IAAD;AAAM,UAAA,OAAO,EAAC,OAAd;AAAsB,UAAA,IAAI,EAAC;AAA3B;AAAA;AAAA;AAAA;AAAA,gBANJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ,mBADJ;AAcH,CA7CD;;GAAMN,M;UACYV,W;;;KADZU,M;AA8CN,eAAeA,MAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { useSelector } from 'react-redux';\nimport {\n    LineChart, Bar, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer\n} from 'recharts';\nconst Charts = props => {\n    const bills = useSelector((state) => {\n        return state.user.bills.data\n    })\n\n    const [design, setDesign] = useState([])\n\n    useEffect(() => {\n        const result = bills.slice(-8).reverse().map((ele) => {\n            return { date: ele.date.slice(0, 10), total: ele.total }\n        })\n\n        const output = result.reduce((accumulator, cur) => {\n            let date = cur.date;\n            let found = accumulator.find(elem => elem.date == date)\n            if (found) found.total += cur.total;\n            else accumulator.push(cur);\n            return accumulator;\n        }, []);\n\n        setDesign(output)\n    }, [bills])\n\n\n    console.log('in', design);\n\n\n\n\n    //console.log(\"out\", result)\n\n    return (\n        <>\n            <ResponsiveContainer width={'100%'} height={400}>\n                <LineChart data={design}>\n                    <CartesianGrid strokeDasharray=\"3 3\" />\n                    <XAxis dataKey=\"date\" />\n                    <YAxis />\n                    <Tooltip />\n                    <Legend />\n                    <Line dataKey=\"total\" fill=\"#82ca9d\" />\n                </LineChart>\n            </ResponsiveContainer>\n        </>\n    )\n}\nexport default Charts"]},"metadata":{},"sourceType":"module"}