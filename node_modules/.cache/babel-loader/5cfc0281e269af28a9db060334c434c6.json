{"ast":null,"code":"var noop = function () {};\n\nfunction ensureFunction(value) {\n  return typeof value === 'function' ? value : noop;\n}\n\nmodule.exports = function (node, options, context) {\n  function walk(node) {\n    enter.call(context, node);\n\n    switch (node.type) {\n      case 'Group':\n        node.terms.forEach(walk);\n        break;\n\n      case 'Multiplier':\n        walk(node.term);\n        break;\n\n      case 'Type':\n      case 'Property':\n      case 'Keyword':\n      case 'AtKeyword':\n      case 'Function':\n      case 'String':\n      case 'Token':\n      case 'Comma':\n        break;\n\n      default:\n        throw new Error('Unknown type: ' + node.type);\n    }\n\n    leave.call(context, node);\n  }\n\n  var enter = noop;\n  var leave = noop;\n\n  if (typeof options === 'function') {\n    enter = options;\n  } else if (options) {\n    enter = ensureFunction(options.enter);\n    leave = ensureFunction(options.leave);\n  }\n\n  if (enter === noop && leave === noop) {\n    throw new Error('Neither `enter` nor `leave` walker handler is set or both aren\\'t a function');\n  }\n\n  walk(node, context);\n};","map":{"version":3,"sources":["/Users/macbook/Documents/GitHub/React 3/billing-app/node_modules/react-pdf-html/node_modules/css-tree/lib/definition-syntax/walk.js"],"names":["noop","ensureFunction","value","module","exports","node","options","context","walk","enter","call","type","terms","forEach","term","Error","leave"],"mappings":"AAAA,IAAIA,IAAI,GAAG,YAAW,CAAE,CAAxB;;AAEA,SAASC,cAAT,CAAwBC,KAAxB,EAA+B;AAC3B,SAAO,OAAOA,KAAP,KAAiB,UAAjB,GAA8BA,KAA9B,GAAsCF,IAA7C;AACH;;AAEDG,MAAM,CAACC,OAAP,GAAiB,UAASC,IAAT,EAAeC,OAAf,EAAwBC,OAAxB,EAAiC;AAC9C,WAASC,IAAT,CAAcH,IAAd,EAAoB;AAChBI,IAAAA,KAAK,CAACC,IAAN,CAAWH,OAAX,EAAoBF,IAApB;;AAEA,YAAQA,IAAI,CAACM,IAAb;AACI,WAAK,OAAL;AACIN,QAAAA,IAAI,CAACO,KAAL,CAAWC,OAAX,CAAmBL,IAAnB;AACA;;AAEJ,WAAK,YAAL;AACIA,QAAAA,IAAI,CAACH,IAAI,CAACS,IAAN,CAAJ;AACA;;AAEJ,WAAK,MAAL;AACA,WAAK,UAAL;AACA,WAAK,SAAL;AACA,WAAK,WAAL;AACA,WAAK,UAAL;AACA,WAAK,QAAL;AACA,WAAK,OAAL;AACA,WAAK,OAAL;AACI;;AAEJ;AACI,cAAM,IAAIC,KAAJ,CAAU,mBAAmBV,IAAI,CAACM,IAAlC,CAAN;AApBR;;AAuBAK,IAAAA,KAAK,CAACN,IAAN,CAAWH,OAAX,EAAoBF,IAApB;AACH;;AAED,MAAII,KAAK,GAAGT,IAAZ;AACA,MAAIgB,KAAK,GAAGhB,IAAZ;;AAEA,MAAI,OAAOM,OAAP,KAAmB,UAAvB,EAAmC;AAC/BG,IAAAA,KAAK,GAAGH,OAAR;AACH,GAFD,MAEO,IAAIA,OAAJ,EAAa;AAChBG,IAAAA,KAAK,GAAGR,cAAc,CAACK,OAAO,CAACG,KAAT,CAAtB;AACAO,IAAAA,KAAK,GAAGf,cAAc,CAACK,OAAO,CAACU,KAAT,CAAtB;AACH;;AAED,MAAIP,KAAK,KAAKT,IAAV,IAAkBgB,KAAK,KAAKhB,IAAhC,EAAsC;AAClC,UAAM,IAAIe,KAAJ,CAAU,8EAAV,CAAN;AACH;;AAEDP,EAAAA,IAAI,CAACH,IAAD,EAAOE,OAAP,CAAJ;AACH,CA7CD","sourcesContent":["var noop = function() {};\n\nfunction ensureFunction(value) {\n    return typeof value === 'function' ? value : noop;\n}\n\nmodule.exports = function(node, options, context) {\n    function walk(node) {\n        enter.call(context, node);\n\n        switch (node.type) {\n            case 'Group':\n                node.terms.forEach(walk);\n                break;\n\n            case 'Multiplier':\n                walk(node.term);\n                break;\n\n            case 'Type':\n            case 'Property':\n            case 'Keyword':\n            case 'AtKeyword':\n            case 'Function':\n            case 'String':\n            case 'Token':\n            case 'Comma':\n                break;\n\n            default:\n                throw new Error('Unknown type: ' + node.type);\n        }\n\n        leave.call(context, node);\n    }\n\n    var enter = noop;\n    var leave = noop;\n\n    if (typeof options === 'function') {\n        enter = options;\n    } else if (options) {\n        enter = ensureFunction(options.enter);\n        leave = ensureFunction(options.leave);\n    }\n\n    if (enter === noop && leave === noop) {\n        throw new Error('Neither `enter` nor `leave` walker handler is set or both aren\\'t a function');\n    }\n\n    walk(node, context);\n};\n"]},"metadata":{},"sourceType":"script"}