{"ast":null,"code":"// import {React, useState, useEffect} from \"react\";\n// import { useSelector } from \"react-redux\";\n// import Billtem from \"./Billtem\";\n// import sortedData from \"../../selectors/sortedData\";\n// import ReactPaginate from 'react-paginate'\n// const BillList = (props) => {\n//     const bills = useSelector(state=>state.bills.data)\n//     const [search, setSearch] = useState('')\n//     const [sort, setSort] = useState('')\n//     const [data, setData] = useState([])\n//     const [pageNumber, setPageNumber] = useState(0)\n//     const billsPerPage = 10\n//     const pagesVisited = pageNumber * billsPerPage\n//     useEffect(() => {\n//         setData([...bills])\n//     },[bills])\n//     const filteredBills = () => {\n//         const result = data.filter(ele=>{\n//             return ele.customer.toLowerCase().includes(search.toLowerCase())\n//         })\n//         return result\n//     }\n//     const handleSortChange = (e) => {\n//         setSort(e.target.value)\n//         let sortedBills = []\n//         if(e.target.value === 'ascName'){\n//             sortedBills = sortedData(data, 'name')\n//         } else if(e.target.value === 'descName'){\n//             sortedBills = sortedData(data, 'name').reverse()\n//         } else {\n//             sortedBills = [...bills]\n//         }\n//         setData(sortedBills)\n//     }\n//     const handleSearchChange = (e) => {\n//         setSearch(e.target.value)\n//     }\n//     const pageCount = filteredBills().length > 0 ? Math.ceil(filteredBills().length / billsPerPage) : Math.ceil(data.length / billsPerPage)\n//     const changePage = ({selected}) => {\n//         setPageNumber(selected)\n//     }\n//     return (\n//         <div>\n//             <h3>List of Bills</h3>\n//             <input type=\"search\" placeholder=\"Search by phone or mobile\" value={search} onChange={handleSearchChange}/>\n//             <p></p>\n//             <div>\n//                 <select value={sort} onChange={handleSortChange}>\n//                     <option value=\"\">Sort By: None</option>\n//                     <option value=\"ascName\">Name A-Z</option>\n//                     <option value=\"descName\">Name Z-A</option>\n//                 </select>\n//             </div>\n//             <p></p>\n//             {search?\n//             <div>\n//                 {filteredBills().length>0 ? filteredBills().slice(pagesVisited, pagesVisited+billsPerPage).map(bill=>{\n//                 return <Billtem key={bill._id} bill={bill}/>\n//             }): <h3>No Bills Added</h3>}\n//             </div>:\n//             <div>\n//                 {data.length>0 ? data.slice(pagesVisited, pagesVisited+billsPerPage).map(bill=>{\n//                 return <Billtem key={bill._id} bill={bill}/>\n//             }): <h3>No Bills Added</h3>}\n//             </div>\n//             }\n//             <ReactPaginate\n//             previousLabel={\"Previous\"}\n//             pageCount={pageCount}\n//             nextLabel={\"Next\"}\n//             onPageChange={changePage}\n//             />\n//         </div>\n//     )\n// }\n// export default BillList","map":{"version":3,"sources":["/Users/macbook/Documents/GitHub/React 3/billing-app/src/Components/Bills/BillList.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAGA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA","sourcesContent":["// import {React, useState, useEffect} from \"react\";\n// import { useSelector } from \"react-redux\";\n// import Billtem from \"./Billtem\";\n// import sortedData from \"../../selectors/sortedData\";\n// import ReactPaginate from 'react-paginate'\n\n// const BillList = (props) => {\n\n//     const bills = useSelector(state=>state.bills.data)\n\n//     const [search, setSearch] = useState('')\n//     const [sort, setSort] = useState('')\n//     const [data, setData] = useState([])\n//     const [pageNumber, setPageNumber] = useState(0)\n//     const billsPerPage = 10\n//     const pagesVisited = pageNumber * billsPerPage\n\n//     useEffect(() => {\n//         setData([...bills])\n//     },[bills])\n\n//     const filteredBills = () => {\n//         const result = data.filter(ele=>{\n//             return ele.customer.toLowerCase().includes(search.toLowerCase())\n//         })\n//         return result\n//     }\n\n//     const handleSortChange = (e) => {\n//         setSort(e.target.value)\n//         let sortedBills = []\n//         if(e.target.value === 'ascName'){\n//             sortedBills = sortedData(data, 'name')\n//         } else if(e.target.value === 'descName'){\n//             sortedBills = sortedData(data, 'name').reverse()\n//         } else {\n//             sortedBills = [...bills]\n//         }\n//         setData(sortedBills)\n//     }\n\n//     const handleSearchChange = (e) => {\n//         setSearch(e.target.value)\n//     }\n\n//     const pageCount = filteredBills().length > 0 ? Math.ceil(filteredBills().length / billsPerPage) : Math.ceil(data.length / billsPerPage)\n\n\n//     const changePage = ({selected}) => {\n//         setPageNumber(selected)\n//     }\n\n//     return (\n//         <div>\n//             <h3>List of Bills</h3>\n//             <input type=\"search\" placeholder=\"Search by phone or mobile\" value={search} onChange={handleSearchChange}/>\n//             <p></p>\n//             <div>\n//                 <select value={sort} onChange={handleSortChange}>\n//                     <option value=\"\">Sort By: None</option>\n//                     <option value=\"ascName\">Name A-Z</option>\n//                     <option value=\"descName\">Name Z-A</option>\n//                 </select>\n//             </div>\n//             <p></p>\n//             {search?\n//             <div>\n//                 {filteredBills().length>0 ? filteredBills().slice(pagesVisited, pagesVisited+billsPerPage).map(bill=>{\n//                 return <Billtem key={bill._id} bill={bill}/>\n//             }): <h3>No Bills Added</h3>}\n//             </div>:\n//             <div>\n//                 {data.length>0 ? data.slice(pagesVisited, pagesVisited+billsPerPage).map(bill=>{\n//                 return <Billtem key={bill._id} bill={bill}/>\n//             }): <h3>No Bills Added</h3>}\n//             </div>\n//             }\n//             <ReactPaginate\n//             previousLabel={\"Previous\"}\n//             pageCount={pageCount}\n//             nextLabel={\"Next\"}\n//             onPageChange={changePage}\n//             />\n//         </div>\n//     )\n// }\n\n// export default BillList"]},"metadata":{},"sourceType":"module"}