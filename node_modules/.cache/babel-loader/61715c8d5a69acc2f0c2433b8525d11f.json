{"ast":null,"code":"var SourceMapGenerator = require('source-map/lib/source-map-generator').SourceMapGenerator;\n\nvar trackNodes = {\n  Atrule: true,\n  Selector: true,\n  Declaration: true\n};\n\nmodule.exports = function generateSourceMap(handlers) {\n  var map = new SourceMapGenerator();\n  var line = 1;\n  var column = 0;\n  var generated = {\n    line: 1,\n    column: 0\n  };\n  var original = {\n    line: 0,\n    // should be zero to add first mapping\n    column: 0\n  };\n  var sourceMappingActive = false;\n  var activatedGenerated = {\n    line: 1,\n    column: 0\n  };\n  var activatedMapping = {\n    generated: activatedGenerated\n  };\n  var handlersNode = handlers.node;\n\n  handlers.node = function (node) {\n    if (node.loc && node.loc.start && trackNodes.hasOwnProperty(node.type)) {\n      var nodeLine = node.loc.start.line;\n      var nodeColumn = node.loc.start.column - 1;\n\n      if (original.line !== nodeLine || original.column !== nodeColumn) {\n        original.line = nodeLine;\n        original.column = nodeColumn;\n        generated.line = line;\n        generated.column = column;\n\n        if (sourceMappingActive) {\n          sourceMappingActive = false;\n\n          if (generated.line !== activatedGenerated.line || generated.column !== activatedGenerated.column) {\n            map.addMapping(activatedMapping);\n          }\n        }\n\n        sourceMappingActive = true;\n        map.addMapping({\n          source: node.loc.source,\n          original: original,\n          generated: generated\n        });\n      }\n    }\n\n    handlersNode.call(this, node);\n\n    if (sourceMappingActive && trackNodes.hasOwnProperty(node.type)) {\n      activatedGenerated.line = line;\n      activatedGenerated.column = column;\n    }\n  };\n\n  var handlersChunk = handlers.chunk;\n\n  handlers.chunk = function (chunk) {\n    for (var i = 0; i < chunk.length; i++) {\n      if (chunk.charCodeAt(i) === 10) {\n        // \\n\n        line++;\n        column = 0;\n      } else {\n        column++;\n      }\n    }\n\n    handlersChunk(chunk);\n  };\n\n  var handlersResult = handlers.result;\n\n  handlers.result = function () {\n    if (sourceMappingActive) {\n      map.addMapping(activatedMapping);\n    }\n\n    return {\n      css: handlersResult(),\n      map: map\n    };\n  };\n\n  return handlers;\n};","map":{"version":3,"sources":["/Users/macbook/Documents/GitHub/React 3/billing-app/node_modules/react-pdf-html/node_modules/css-tree/lib/generator/sourceMap.js"],"names":["SourceMapGenerator","require","trackNodes","Atrule","Selector","Declaration","module","exports","generateSourceMap","handlers","map","line","column","generated","original","sourceMappingActive","activatedGenerated","activatedMapping","handlersNode","node","loc","start","hasOwnProperty","type","nodeLine","nodeColumn","addMapping","source","call","handlersChunk","chunk","i","length","charCodeAt","handlersResult","result","css"],"mappings":"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","sourcesContent":["var SourceMapGenerator = require('source-map/lib/source-map-generator').SourceMapGenerator;\nvar trackNodes = {\n    Atrule: true,\n    Selector: true,\n    Declaration: true\n};\n\nmodule.exports = function generateSourceMap(handlers) {\n    var map = new SourceMapGenerator();\n    var line = 1;\n    var column = 0;\n    var generated = {\n        line: 1,\n        column: 0\n    };\n    var original = {\n        line: 0, // should be zero to add first mapping\n        column: 0\n    };\n    var sourceMappingActive = false;\n    var activatedGenerated = {\n        line: 1,\n        column: 0\n    };\n    var activatedMapping = {\n        generated: activatedGenerated\n    };\n\n    var handlersNode = handlers.node;\n    handlers.node = function(node) {\n        if (node.loc && node.loc.start && trackNodes.hasOwnProperty(node.type)) {\n            var nodeLine = node.loc.start.line;\n            var nodeColumn = node.loc.start.column - 1;\n\n            if (original.line !== nodeLine ||\n                original.column !== nodeColumn) {\n                original.line = nodeLine;\n                original.column = nodeColumn;\n\n                generated.line = line;\n                generated.column = column;\n\n                if (sourceMappingActive) {\n                    sourceMappingActive = false;\n                    if (generated.line !== activatedGenerated.line ||\n                        generated.column !== activatedGenerated.column) {\n                        map.addMapping(activatedMapping);\n                    }\n                }\n\n                sourceMappingActive = true;\n                map.addMapping({\n                    source: node.loc.source,\n                    original: original,\n                    generated: generated\n                });\n            }\n        }\n\n        handlersNode.call(this, node);\n\n        if (sourceMappingActive && trackNodes.hasOwnProperty(node.type)) {\n            activatedGenerated.line = line;\n            activatedGenerated.column = column;\n        }\n    };\n\n    var handlersChunk = handlers.chunk;\n    handlers.chunk = function(chunk) {\n        for (var i = 0; i < chunk.length; i++) {\n            if (chunk.charCodeAt(i) === 10) { // \\n\n                line++;\n                column = 0;\n            } else {\n                column++;\n            }\n        }\n\n        handlersChunk(chunk);\n    };\n\n    var handlersResult = handlers.result;\n    handlers.result = function() {\n        if (sourceMappingActive) {\n            map.addMapping(activatedMapping);\n        }\n\n        return {\n            css: handlersResult(),\n            map: map\n        };\n    };\n\n    return handlers;\n};\n"]},"metadata":{},"sourceType":"script"}