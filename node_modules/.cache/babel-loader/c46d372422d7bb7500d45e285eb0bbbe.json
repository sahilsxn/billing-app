{"ast":null,"code":"var _jsxFileName = \"/Users/macbook/Documents/GitHub/React 3/billing-app/src/selectors/PrivateRoute.js\";\nimport { Route, Redirect } from 'react-router-dom'; // HOC \n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PrivateRoute = _ref => {\n  let {\n    component: Component,\n    ...rest\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(Route, { ...rest,\n    render: props => {\n      return localStorage.getItem('token') ? /*#__PURE__*/_jsxDEV(Component, { ...props\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 56\n      }, this) : /*#__PURE__*/_jsxDEV(Redirect, {\n        to: {\n          pathname: '/login'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 83\n      }, this);\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 4,\n    columnNumber: 12\n  }, this);\n};\n\n_c = PrivateRoute;\nexport default PrivateRoute;\n\nvar _c;\n\n$RefreshReg$(_c, \"PrivateRoute\");","map":{"version":3,"sources":["/Users/macbook/Documents/GitHub/React 3/billing-app/src/selectors/PrivateRoute.js"],"names":["Route","Redirect","PrivateRoute","component","Component","rest","props","localStorage","getItem","pathname"],"mappings":";AAAA,SAASA,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC,C,CACA;;;;AACA,MAAMC,YAAY,GAAG,QAAsC;AAAA,MAArC;AAAEC,IAAAA,SAAS,EAAEC,SAAb;AAAwB,OAAGC;AAA3B,GAAqC;AACvD,sBAAO,QAAC,KAAD,OACKA,IADL;AAGC,IAAA,MAAM,EAAGC,KAAD,IAAW;AACf,aAAOC,YAAY,CAACC,OAAb,CAAqB,OAArB,iBAAgC,QAAC,SAAD,OAAeF;AAAf;AAAA;AAAA;AAAA;AAAA,cAAhC,gBAA2D,QAAC,QAAD;AAAU,QAAA,EAAE,EAAE;AAAEG,UAAAA,QAAQ,EAAE;AAAZ;AAAd;AAAA;AAAA;AAAA;AAAA,cAAlE;AACH;AALF;AAAA;AAAA;AAAA;AAAA,UAAP;AAQH,CATD;;KAAMP,Y;AAWN,eAAeA,YAAf","sourcesContent":["import { Route, Redirect } from 'react-router-dom'\n// HOC \nconst PrivateRoute = ({ component: Component, ...rest}) => {\n    return <Route \n            {...rest}\n            \n            render={(props) => {\n                return localStorage.getItem('token') ? <Component {...props} /> : <Redirect to={{ pathname: '/login'}} />\n            }}\n    \n    />\n}\n\nexport default PrivateRoute"]},"metadata":{},"sourceType":"module"}