{"ast":null,"code":"var TYPE = require('../../tokenizer').TYPE;\n\nvar rawMode = require('./Raw').mode;\n\nvar LEFTCURLYBRACKET = TYPE.LeftCurlyBracket;\n\nfunction consumeRaw(startToken) {\n  return this.Raw(startToken, rawMode.leftCurlyBracket, true);\n}\n\nfunction consumePrelude() {\n  var prelude = this.SelectorList();\n\n  if (prelude.type !== 'Raw' && this.scanner.eof === false && this.scanner.tokenType !== LEFTCURLYBRACKET) {\n    this.error();\n  }\n\n  return prelude;\n}\n\nmodule.exports = {\n  name: 'Rule',\n  structure: {\n    prelude: ['SelectorList', 'Raw'],\n    block: ['Block']\n  },\n  parse: function () {\n    var startToken = this.scanner.tokenIndex;\n    var startOffset = this.scanner.tokenStart;\n    var prelude;\n    var block;\n\n    if (this.parseRulePrelude) {\n      prelude = this.parseWithFallback(consumePrelude, consumeRaw);\n    } else {\n      prelude = consumeRaw.call(this, startToken);\n    }\n\n    block = this.Block(true);\n    return {\n      type: 'Rule',\n      loc: this.getLocation(startOffset, this.scanner.tokenStart),\n      prelude: prelude,\n      block: block\n    };\n  },\n  generate: function (node) {\n    this.node(node.prelude);\n    this.node(node.block);\n  },\n  walkContext: 'rule'\n};","map":{"version":3,"sources":["/Users/macbook/Documents/GitHub/React 3/billing-app/node_modules/react-pdf-html/node_modules/css-tree/lib/syntax/node/Rule.js"],"names":["TYPE","require","rawMode","mode","LEFTCURLYBRACKET","LeftCurlyBracket","consumeRaw","startToken","Raw","leftCurlyBracket","consumePrelude","prelude","SelectorList","type","scanner","eof","tokenType","error","module","exports","name","structure","block","parse","tokenIndex","startOffset","tokenStart","parseRulePrelude","parseWithFallback","call","Block","loc","getLocation","generate","node","walkContext"],"mappings":"AAAA,IAAIA,IAAI,GAAGC,OAAO,CAAC,iBAAD,CAAP,CAA2BD,IAAtC;;AACA,IAAIE,OAAO,GAAGD,OAAO,CAAC,OAAD,CAAP,CAAiBE,IAA/B;;AAEA,IAAIC,gBAAgB,GAAGJ,IAAI,CAACK,gBAA5B;;AAEA,SAASC,UAAT,CAAoBC,UAApB,EAAgC;AAC5B,SAAO,KAAKC,GAAL,CAASD,UAAT,EAAqBL,OAAO,CAACO,gBAA7B,EAA+C,IAA/C,CAAP;AACH;;AAED,SAASC,cAAT,GAA0B;AACtB,MAAIC,OAAO,GAAG,KAAKC,YAAL,EAAd;;AAEA,MAAID,OAAO,CAACE,IAAR,KAAiB,KAAjB,IACA,KAAKC,OAAL,CAAaC,GAAb,KAAqB,KADrB,IAEA,KAAKD,OAAL,CAAaE,SAAb,KAA2BZ,gBAF/B,EAEiD;AAC7C,SAAKa,KAAL;AACH;;AAED,SAAON,OAAP;AACH;;AAEDO,MAAM,CAACC,OAAP,GAAiB;AACbC,EAAAA,IAAI,EAAE,MADO;AAEbC,EAAAA,SAAS,EAAE;AACPV,IAAAA,OAAO,EAAE,CAAC,cAAD,EAAiB,KAAjB,CADF;AAEPW,IAAAA,KAAK,EAAE,CAAC,OAAD;AAFA,GAFE;AAMbC,EAAAA,KAAK,EAAE,YAAW;AACd,QAAIhB,UAAU,GAAG,KAAKO,OAAL,CAAaU,UAA9B;AACA,QAAIC,WAAW,GAAG,KAAKX,OAAL,CAAaY,UAA/B;AACA,QAAIf,OAAJ;AACA,QAAIW,KAAJ;;AAEA,QAAI,KAAKK,gBAAT,EAA2B;AACvBhB,MAAAA,OAAO,GAAG,KAAKiB,iBAAL,CAAuBlB,cAAvB,EAAuCJ,UAAvC,CAAV;AACH,KAFD,MAEO;AACHK,MAAAA,OAAO,GAAGL,UAAU,CAACuB,IAAX,CAAgB,IAAhB,EAAsBtB,UAAtB,CAAV;AACH;;AAEDe,IAAAA,KAAK,GAAG,KAAKQ,KAAL,CAAW,IAAX,CAAR;AAEA,WAAO;AACHjB,MAAAA,IAAI,EAAE,MADH;AAEHkB,MAAAA,GAAG,EAAE,KAAKC,WAAL,CAAiBP,WAAjB,EAA8B,KAAKX,OAAL,CAAaY,UAA3C,CAFF;AAGHf,MAAAA,OAAO,EAAEA,OAHN;AAIHW,MAAAA,KAAK,EAAEA;AAJJ,KAAP;AAMH,GA1BY;AA2BbW,EAAAA,QAAQ,EAAE,UAASC,IAAT,EAAe;AACrB,SAAKA,IAAL,CAAUA,IAAI,CAACvB,OAAf;AACA,SAAKuB,IAAL,CAAUA,IAAI,CAACZ,KAAf;AACH,GA9BY;AA+Bba,EAAAA,WAAW,EAAE;AA/BA,CAAjB","sourcesContent":["var TYPE = require('../../tokenizer').TYPE;\nvar rawMode = require('./Raw').mode;\n\nvar LEFTCURLYBRACKET = TYPE.LeftCurlyBracket;\n\nfunction consumeRaw(startToken) {\n    return this.Raw(startToken, rawMode.leftCurlyBracket, true);\n}\n\nfunction consumePrelude() {\n    var prelude = this.SelectorList();\n\n    if (prelude.type !== 'Raw' &&\n        this.scanner.eof === false &&\n        this.scanner.tokenType !== LEFTCURLYBRACKET) {\n        this.error();\n    }\n\n    return prelude;\n}\n\nmodule.exports = {\n    name: 'Rule',\n    structure: {\n        prelude: ['SelectorList', 'Raw'],\n        block: ['Block']\n    },\n    parse: function() {\n        var startToken = this.scanner.tokenIndex;\n        var startOffset = this.scanner.tokenStart;\n        var prelude;\n        var block;\n\n        if (this.parseRulePrelude) {\n            prelude = this.parseWithFallback(consumePrelude, consumeRaw);\n        } else {\n            prelude = consumeRaw.call(this, startToken);\n        }\n\n        block = this.Block(true);\n\n        return {\n            type: 'Rule',\n            loc: this.getLocation(startOffset, this.scanner.tokenStart),\n            prelude: prelude,\n            block: block\n        };\n    },\n    generate: function(node) {\n        this.node(node.prelude);\n        this.node(node.block);\n    },\n    walkContext: 'rule'\n};\n"]},"metadata":{},"sourceType":"script"}