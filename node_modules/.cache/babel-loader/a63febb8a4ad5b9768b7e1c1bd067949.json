{"ast":null,"code":"var SyntaxError = require('./SyntaxError');\n\nvar TAB = 9;\nvar N = 10;\nvar F = 12;\nvar R = 13;\nvar SPACE = 32;\n\nvar Tokenizer = function (str) {\n  this.str = str;\n  this.pos = 0;\n};\n\nTokenizer.prototype = {\n  charCodeAt: function (pos) {\n    return pos < this.str.length ? this.str.charCodeAt(pos) : 0;\n  },\n  charCode: function () {\n    return this.charCodeAt(this.pos);\n  },\n  nextCharCode: function () {\n    return this.charCodeAt(this.pos + 1);\n  },\n  nextNonWsCode: function (pos) {\n    return this.charCodeAt(this.findWsEnd(pos));\n  },\n  findWsEnd: function (pos) {\n    for (; pos < this.str.length; pos++) {\n      var code = this.str.charCodeAt(pos);\n\n      if (code !== R && code !== N && code !== F && code !== SPACE && code !== TAB) {\n        break;\n      }\n    }\n\n    return pos;\n  },\n  substringToPos: function (end) {\n    return this.str.substring(this.pos, this.pos = end);\n  },\n  eat: function (code) {\n    if (this.charCode() !== code) {\n      this.error('Expect `' + String.fromCharCode(code) + '`');\n    }\n\n    this.pos++;\n  },\n  peek: function () {\n    return this.pos < this.str.length ? this.str.charAt(this.pos++) : '';\n  },\n  error: function (message) {\n    throw new SyntaxError(message, this.str, this.pos);\n  }\n};\nmodule.exports = Tokenizer;","map":{"version":3,"sources":["/Users/macbook/Documents/GitHub/React 3/billing-app/node_modules/react-pdf-html/node_modules/css-tree/lib/definition-syntax/tokenizer.js"],"names":["SyntaxError","require","TAB","N","F","R","SPACE","Tokenizer","str","pos","prototype","charCodeAt","length","charCode","nextCharCode","nextNonWsCode","findWsEnd","code","substringToPos","end","substring","eat","error","String","fromCharCode","peek","charAt","message","module","exports"],"mappings":"AAAA,IAAIA,WAAW,GAAGC,OAAO,CAAC,eAAD,CAAzB;;AAEA,IAAIC,GAAG,GAAG,CAAV;AACA,IAAIC,CAAC,GAAG,EAAR;AACA,IAAIC,CAAC,GAAG,EAAR;AACA,IAAIC,CAAC,GAAG,EAAR;AACA,IAAIC,KAAK,GAAG,EAAZ;;AAEA,IAAIC,SAAS,GAAG,UAASC,GAAT,EAAc;AAC1B,OAAKA,GAAL,GAAWA,GAAX;AACA,OAAKC,GAAL,GAAW,CAAX;AACH,CAHD;;AAKAF,SAAS,CAACG,SAAV,GAAsB;AAClBC,EAAAA,UAAU,EAAE,UAASF,GAAT,EAAc;AACtB,WAAOA,GAAG,GAAG,KAAKD,GAAL,CAASI,MAAf,GAAwB,KAAKJ,GAAL,CAASG,UAAT,CAAoBF,GAApB,CAAxB,GAAmD,CAA1D;AACH,GAHiB;AAIlBI,EAAAA,QAAQ,EAAE,YAAW;AACjB,WAAO,KAAKF,UAAL,CAAgB,KAAKF,GAArB,CAAP;AACH,GANiB;AAOlBK,EAAAA,YAAY,EAAE,YAAW;AACrB,WAAO,KAAKH,UAAL,CAAgB,KAAKF,GAAL,GAAW,CAA3B,CAAP;AACH,GATiB;AAUlBM,EAAAA,aAAa,EAAE,UAASN,GAAT,EAAc;AACzB,WAAO,KAAKE,UAAL,CAAgB,KAAKK,SAAL,CAAeP,GAAf,CAAhB,CAAP;AACH,GAZiB;AAalBO,EAAAA,SAAS,EAAE,UAASP,GAAT,EAAc;AACrB,WAAOA,GAAG,GAAG,KAAKD,GAAL,CAASI,MAAtB,EAA8BH,GAAG,EAAjC,EAAqC;AACjC,UAAIQ,IAAI,GAAG,KAAKT,GAAL,CAASG,UAAT,CAAoBF,GAApB,CAAX;;AACA,UAAIQ,IAAI,KAAKZ,CAAT,IAAcY,IAAI,KAAKd,CAAvB,IAA4Bc,IAAI,KAAKb,CAArC,IAA0Ca,IAAI,KAAKX,KAAnD,IAA4DW,IAAI,KAAKf,GAAzE,EAA8E;AAC1E;AACH;AACJ;;AAED,WAAOO,GAAP;AACH,GAtBiB;AAuBlBS,EAAAA,cAAc,EAAE,UAASC,GAAT,EAAc;AAC1B,WAAO,KAAKX,GAAL,CAASY,SAAT,CAAmB,KAAKX,GAAxB,EAA6B,KAAKA,GAAL,GAAWU,GAAxC,CAAP;AACH,GAzBiB;AA0BlBE,EAAAA,GAAG,EAAE,UAASJ,IAAT,EAAe;AAChB,QAAI,KAAKJ,QAAL,OAAoBI,IAAxB,EAA8B;AAC1B,WAAKK,KAAL,CAAW,aAAaC,MAAM,CAACC,YAAP,CAAoBP,IAApB,CAAb,GAAyC,GAApD;AACH;;AAED,SAAKR,GAAL;AACH,GAhCiB;AAiClBgB,EAAAA,IAAI,EAAE,YAAW;AACb,WAAO,KAAKhB,GAAL,GAAW,KAAKD,GAAL,CAASI,MAApB,GAA6B,KAAKJ,GAAL,CAASkB,MAAT,CAAgB,KAAKjB,GAAL,EAAhB,CAA7B,GAA2D,EAAlE;AACH,GAnCiB;AAoClBa,EAAAA,KAAK,EAAE,UAASK,OAAT,EAAkB;AACrB,UAAM,IAAI3B,WAAJ,CAAgB2B,OAAhB,EAAyB,KAAKnB,GAA9B,EAAmC,KAAKC,GAAxC,CAAN;AACH;AAtCiB,CAAtB;AAyCAmB,MAAM,CAACC,OAAP,GAAiBtB,SAAjB","sourcesContent":["var SyntaxError = require('./SyntaxError');\n\nvar TAB = 9;\nvar N = 10;\nvar F = 12;\nvar R = 13;\nvar SPACE = 32;\n\nvar Tokenizer = function(str) {\n    this.str = str;\n    this.pos = 0;\n};\n\nTokenizer.prototype = {\n    charCodeAt: function(pos) {\n        return pos < this.str.length ? this.str.charCodeAt(pos) : 0;\n    },\n    charCode: function() {\n        return this.charCodeAt(this.pos);\n    },\n    nextCharCode: function() {\n        return this.charCodeAt(this.pos + 1);\n    },\n    nextNonWsCode: function(pos) {\n        return this.charCodeAt(this.findWsEnd(pos));\n    },\n    findWsEnd: function(pos) {\n        for (; pos < this.str.length; pos++) {\n            var code = this.str.charCodeAt(pos);\n            if (code !== R && code !== N && code !== F && code !== SPACE && code !== TAB) {\n                break;\n            }\n        }\n\n        return pos;\n    },\n    substringToPos: function(end) {\n        return this.str.substring(this.pos, this.pos = end);\n    },\n    eat: function(code) {\n        if (this.charCode() !== code) {\n            this.error('Expect `' + String.fromCharCode(code) + '`');\n        }\n\n        this.pos++;\n    },\n    peek: function() {\n        return this.pos < this.str.length ? this.str.charAt(this.pos++) : '';\n    },\n    error: function(message) {\n        throw new SyntaxError(message, this.str, this.pos);\n    }\n};\n\nmodule.exports = Tokenizer;\n"]},"metadata":{},"sourceType":"script"}