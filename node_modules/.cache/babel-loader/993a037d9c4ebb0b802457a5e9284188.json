{"ast":null,"code":"var consumeNumber = require('../../tokenizer/utils').consumeNumber;\n\nvar TYPE = require('../../tokenizer').TYPE;\n\nvar PERCENTAGE = TYPE.Percentage;\nmodule.exports = {\n  name: 'Percentage',\n  structure: {\n    value: String\n  },\n  parse: function () {\n    var start = this.scanner.tokenStart;\n    var numberEnd = consumeNumber(this.scanner.source, start);\n    this.eat(PERCENTAGE);\n    return {\n      type: 'Percentage',\n      loc: this.getLocation(start, this.scanner.tokenStart),\n      value: this.scanner.source.substring(start, numberEnd)\n    };\n  },\n  generate: function (node) {\n    this.chunk(node.value);\n    this.chunk('%');\n  }\n};","map":{"version":3,"sources":["/Users/macbook/Documents/GitHub/React 3/billing-app/node_modules/react-pdf-html/node_modules/css-tree/lib/syntax/node/Percentage.js"],"names":["consumeNumber","require","TYPE","PERCENTAGE","Percentage","module","exports","name","structure","value","String","parse","start","scanner","tokenStart","numberEnd","source","eat","type","loc","getLocation","substring","generate","node","chunk"],"mappings":"AAAA,IAAIA,aAAa,GAAGC,OAAO,CAAC,uBAAD,CAAP,CAAiCD,aAArD;;AACA,IAAIE,IAAI,GAAGD,OAAO,CAAC,iBAAD,CAAP,CAA2BC,IAAtC;;AAEA,IAAIC,UAAU,GAAGD,IAAI,CAACE,UAAtB;AAEAC,MAAM,CAACC,OAAP,GAAiB;AACbC,EAAAA,IAAI,EAAE,YADO;AAEbC,EAAAA,SAAS,EAAE;AACPC,IAAAA,KAAK,EAAEC;AADA,GAFE;AAKbC,EAAAA,KAAK,EAAE,YAAW;AACd,QAAIC,KAAK,GAAG,KAAKC,OAAL,CAAaC,UAAzB;AACA,QAAIC,SAAS,GAAGf,aAAa,CAAC,KAAKa,OAAL,CAAaG,MAAd,EAAsBJ,KAAtB,CAA7B;AAEA,SAAKK,GAAL,CAASd,UAAT;AAEA,WAAO;AACHe,MAAAA,IAAI,EAAE,YADH;AAEHC,MAAAA,GAAG,EAAE,KAAKC,WAAL,CAAiBR,KAAjB,EAAwB,KAAKC,OAAL,CAAaC,UAArC,CAFF;AAGHL,MAAAA,KAAK,EAAE,KAAKI,OAAL,CAAaG,MAAb,CAAoBK,SAApB,CAA8BT,KAA9B,EAAqCG,SAArC;AAHJ,KAAP;AAKH,GAhBY;AAiBbO,EAAAA,QAAQ,EAAE,UAASC,IAAT,EAAe;AACrB,SAAKC,KAAL,CAAWD,IAAI,CAACd,KAAhB;AACA,SAAKe,KAAL,CAAW,GAAX;AACH;AApBY,CAAjB","sourcesContent":["var consumeNumber = require('../../tokenizer/utils').consumeNumber;\nvar TYPE = require('../../tokenizer').TYPE;\n\nvar PERCENTAGE = TYPE.Percentage;\n\nmodule.exports = {\n    name: 'Percentage',\n    structure: {\n        value: String\n    },\n    parse: function() {\n        var start = this.scanner.tokenStart;\n        var numberEnd = consumeNumber(this.scanner.source, start);\n\n        this.eat(PERCENTAGE);\n\n        return {\n            type: 'Percentage',\n            loc: this.getLocation(start, this.scanner.tokenStart),\n            value: this.scanner.source.substring(start, numberEnd)\n        };\n    },\n    generate: function(node) {\n        this.chunk(node.value);\n        this.chunk('%');\n    }\n};\n"]},"metadata":{},"sourceType":"script"}