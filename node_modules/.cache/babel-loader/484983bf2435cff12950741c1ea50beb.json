{"ast":null,"code":"var List = require('../common/List');\n\nmodule.exports = function createConvertors(walk) {\n  return {\n    fromPlainObject: function (ast) {\n      walk(ast, {\n        enter: function (node) {\n          if (node.children && node.children instanceof List === false) {\n            node.children = new List().fromArray(node.children);\n          }\n        }\n      });\n      return ast;\n    },\n    toPlainObject: function (ast) {\n      walk(ast, {\n        leave: function (node) {\n          if (node.children && node.children instanceof List) {\n            node.children = node.children.toArray();\n          }\n        }\n      });\n      return ast;\n    }\n  };\n};","map":{"version":3,"sources":["/Users/macbook/Documents/GitHub/React 3/billing-app/node_modules/react-pdf-html/node_modules/css-tree/lib/convertor/create.js"],"names":["List","require","module","exports","createConvertors","walk","fromPlainObject","ast","enter","node","children","fromArray","toPlainObject","leave","toArray"],"mappings":"AAAA,IAAIA,IAAI,GAAGC,OAAO,CAAC,gBAAD,CAAlB;;AAEAC,MAAM,CAACC,OAAP,GAAiB,SAASC,gBAAT,CAA0BC,IAA1B,EAAgC;AAC7C,SAAO;AACHC,IAAAA,eAAe,EAAE,UAASC,GAAT,EAAc;AAC3BF,MAAAA,IAAI,CAACE,GAAD,EAAM;AACNC,QAAAA,KAAK,EAAE,UAASC,IAAT,EAAe;AAClB,cAAIA,IAAI,CAACC,QAAL,IAAiBD,IAAI,CAACC,QAAL,YAAyBV,IAAzB,KAAkC,KAAvD,EAA8D;AAC1DS,YAAAA,IAAI,CAACC,QAAL,GAAgB,IAAIV,IAAJ,GAAWW,SAAX,CAAqBF,IAAI,CAACC,QAA1B,CAAhB;AACH;AACJ;AALK,OAAN,CAAJ;AAQA,aAAOH,GAAP;AACH,KAXE;AAYHK,IAAAA,aAAa,EAAE,UAASL,GAAT,EAAc;AACzBF,MAAAA,IAAI,CAACE,GAAD,EAAM;AACNM,QAAAA,KAAK,EAAE,UAASJ,IAAT,EAAe;AAClB,cAAIA,IAAI,CAACC,QAAL,IAAiBD,IAAI,CAACC,QAAL,YAAyBV,IAA9C,EAAoD;AAChDS,YAAAA,IAAI,CAACC,QAAL,GAAgBD,IAAI,CAACC,QAAL,CAAcI,OAAd,EAAhB;AACH;AACJ;AALK,OAAN,CAAJ;AAQA,aAAOP,GAAP;AACH;AAtBE,GAAP;AAwBH,CAzBD","sourcesContent":["var List = require('../common/List');\n\nmodule.exports = function createConvertors(walk) {\n    return {\n        fromPlainObject: function(ast) {\n            walk(ast, {\n                enter: function(node) {\n                    if (node.children && node.children instanceof List === false) {\n                        node.children = new List().fromArray(node.children);\n                    }\n                }\n            });\n\n            return ast;\n        },\n        toPlainObject: function(ast) {\n            walk(ast, {\n                leave: function(node) {\n                    if (node.children && node.children instanceof List) {\n                        node.children = node.children.toArray();\n                    }\n                }\n            });\n\n            return ast;\n        }\n    };\n};\n"]},"metadata":{},"sourceType":"script"}