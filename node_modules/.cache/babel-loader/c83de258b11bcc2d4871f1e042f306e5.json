{"ast":null,"code":"module.exports = {\n  name: 'Selector',\n  structure: {\n    children: [['TypeSelector', 'IdSelector', 'ClassSelector', 'AttributeSelector', 'PseudoClassSelector', 'PseudoElementSelector', 'Combinator', 'WhiteSpace']]\n  },\n  parse: function () {\n    var children = this.readSequence(this.scope.Selector); // nothing were consumed\n\n    if (this.getFirstListNode(children) === null) {\n      this.error('Selector is expected');\n    }\n\n    return {\n      type: 'Selector',\n      loc: this.getLocationFromList(children),\n      children: children\n    };\n  },\n  generate: function (node) {\n    this.children(node);\n  }\n};","map":{"version":3,"sources":["/Users/macbook/Documents/GitHub/React 3/billing-app/node_modules/react-pdf-html/node_modules/css-tree/lib/syntax/node/Selector.js"],"names":["module","exports","name","structure","children","parse","readSequence","scope","Selector","getFirstListNode","error","type","loc","getLocationFromList","generate","node"],"mappings":"AAAAA,MAAM,CAACC,OAAP,GAAiB;AACbC,EAAAA,IAAI,EAAE,UADO;AAEbC,EAAAA,SAAS,EAAE;AACPC,IAAAA,QAAQ,EAAE,CAAC,CACP,cADO,EAEP,YAFO,EAGP,eAHO,EAIP,mBAJO,EAKP,qBALO,EAMP,uBANO,EAOP,YAPO,EAQP,YARO,CAAD;AADH,GAFE;AAcbC,EAAAA,KAAK,EAAE,YAAW;AACd,QAAID,QAAQ,GAAG,KAAKE,YAAL,CAAkB,KAAKC,KAAL,CAAWC,QAA7B,CAAf,CADc,CAGd;;AACA,QAAI,KAAKC,gBAAL,CAAsBL,QAAtB,MAAoC,IAAxC,EAA8C;AAC1C,WAAKM,KAAL,CAAW,sBAAX;AACH;;AAED,WAAO;AACHC,MAAAA,IAAI,EAAE,UADH;AAEHC,MAAAA,GAAG,EAAE,KAAKC,mBAAL,CAAyBT,QAAzB,CAFF;AAGHA,MAAAA,QAAQ,EAAEA;AAHP,KAAP;AAKH,GA3BY;AA4BbU,EAAAA,QAAQ,EAAE,UAASC,IAAT,EAAe;AACrB,SAAKX,QAAL,CAAcW,IAAd;AACH;AA9BY,CAAjB","sourcesContent":["module.exports = {\n    name: 'Selector',\n    structure: {\n        children: [[\n            'TypeSelector',\n            'IdSelector',\n            'ClassSelector',\n            'AttributeSelector',\n            'PseudoClassSelector',\n            'PseudoElementSelector',\n            'Combinator',\n            'WhiteSpace'\n        ]]\n    },\n    parse: function() {\n        var children = this.readSequence(this.scope.Selector);\n\n        // nothing were consumed\n        if (this.getFirstListNode(children) === null) {\n            this.error('Selector is expected');\n        }\n\n        return {\n            type: 'Selector',\n            loc: this.getLocationFromList(children),\n            children: children\n        };\n    },\n    generate: function(node) {\n        this.children(node);\n    }\n};\n"]},"metadata":{},"sourceType":"script"}