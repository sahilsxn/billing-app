{"ast":null,"code":"var TYPE = require('../../tokenizer').TYPE;\n\nvar rawMode = require('./Raw').mode;\n\nvar WHITESPACE = TYPE.WhiteSpace;\nvar COMMENT = TYPE.Comment;\nvar SEMICOLON = TYPE.Semicolon;\nvar ATKEYWORD = TYPE.AtKeyword;\nvar LEFTCURLYBRACKET = TYPE.LeftCurlyBracket;\nvar RIGHTCURLYBRACKET = TYPE.RightCurlyBracket;\n\nfunction consumeRaw(startToken) {\n  return this.Raw(startToken, null, true);\n}\n\nfunction consumeRule() {\n  return this.parseWithFallback(this.Rule, consumeRaw);\n}\n\nfunction consumeRawDeclaration(startToken) {\n  return this.Raw(startToken, rawMode.semicolonIncluded, true);\n}\n\nfunction consumeDeclaration() {\n  if (this.scanner.tokenType === SEMICOLON) {\n    return consumeRawDeclaration.call(this, this.scanner.tokenIndex);\n  }\n\n  var node = this.parseWithFallback(this.Declaration, consumeRawDeclaration);\n\n  if (this.scanner.tokenType === SEMICOLON) {\n    this.scanner.next();\n  }\n\n  return node;\n}\n\nmodule.exports = {\n  name: 'Block',\n  structure: {\n    children: [['Atrule', 'Rule', 'Declaration']]\n  },\n  parse: function (isDeclaration) {\n    var consumer = isDeclaration ? consumeDeclaration : consumeRule;\n    var start = this.scanner.tokenStart;\n    var children = this.createList();\n    this.eat(LEFTCURLYBRACKET);\n\n    scan: while (!this.scanner.eof) {\n      switch (this.scanner.tokenType) {\n        case RIGHTCURLYBRACKET:\n          break scan;\n\n        case WHITESPACE:\n        case COMMENT:\n          this.scanner.next();\n          break;\n\n        case ATKEYWORD:\n          children.push(this.parseWithFallback(this.Atrule, consumeRaw));\n          break;\n\n        default:\n          children.push(consumer.call(this));\n      }\n    }\n\n    if (!this.scanner.eof) {\n      this.eat(RIGHTCURLYBRACKET);\n    }\n\n    return {\n      type: 'Block',\n      loc: this.getLocation(start, this.scanner.tokenStart),\n      children: children\n    };\n  },\n  generate: function (node) {\n    this.chunk('{');\n    this.children(node, function (prev) {\n      if (prev.type === 'Declaration') {\n        this.chunk(';');\n      }\n    });\n    this.chunk('}');\n  },\n  walkContext: 'block'\n};","map":{"version":3,"sources":["/Users/macbook/Documents/GitHub/React 3/billing-app/node_modules/react-pdf-html/node_modules/css-tree/lib/syntax/node/Block.js"],"names":["TYPE","require","rawMode","mode","WHITESPACE","WhiteSpace","COMMENT","Comment","SEMICOLON","Semicolon","ATKEYWORD","AtKeyword","LEFTCURLYBRACKET","LeftCurlyBracket","RIGHTCURLYBRACKET","RightCurlyBracket","consumeRaw","startToken","Raw","consumeRule","parseWithFallback","Rule","consumeRawDeclaration","semicolonIncluded","consumeDeclaration","scanner","tokenType","call","tokenIndex","node","Declaration","next","module","exports","name","structure","children","parse","isDeclaration","consumer","start","tokenStart","createList","eat","scan","eof","push","Atrule","type","loc","getLocation","generate","chunk","prev","walkContext"],"mappings":"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","sourcesContent":["var TYPE = require('../../tokenizer').TYPE;\nvar rawMode = require('./Raw').mode;\n\nvar WHITESPACE = TYPE.WhiteSpace;\nvar COMMENT = TYPE.Comment;\nvar SEMICOLON = TYPE.Semicolon;\nvar ATKEYWORD = TYPE.AtKeyword;\nvar LEFTCURLYBRACKET = TYPE.LeftCurlyBracket;\nvar RIGHTCURLYBRACKET = TYPE.RightCurlyBracket;\n\nfunction consumeRaw(startToken) {\n    return this.Raw(startToken, null, true);\n}\nfunction consumeRule() {\n    return this.parseWithFallback(this.Rule, consumeRaw);\n}\nfunction consumeRawDeclaration(startToken) {\n    return this.Raw(startToken, rawMode.semicolonIncluded, true);\n}\nfunction consumeDeclaration() {\n    if (this.scanner.tokenType === SEMICOLON) {\n        return consumeRawDeclaration.call(this, this.scanner.tokenIndex);\n    }\n\n    var node = this.parseWithFallback(this.Declaration, consumeRawDeclaration);\n\n    if (this.scanner.tokenType === SEMICOLON) {\n        this.scanner.next();\n    }\n\n    return node;\n}\n\nmodule.exports = {\n    name: 'Block',\n    structure: {\n        children: [[\n            'Atrule',\n            'Rule',\n            'Declaration'\n        ]]\n    },\n    parse: function(isDeclaration) {\n        var consumer = isDeclaration ? consumeDeclaration : consumeRule;\n\n        var start = this.scanner.tokenStart;\n        var children = this.createList();\n\n        this.eat(LEFTCURLYBRACKET);\n\n        scan:\n        while (!this.scanner.eof) {\n            switch (this.scanner.tokenType) {\n                case RIGHTCURLYBRACKET:\n                    break scan;\n\n                case WHITESPACE:\n                case COMMENT:\n                    this.scanner.next();\n                    break;\n\n                case ATKEYWORD:\n                    children.push(this.parseWithFallback(this.Atrule, consumeRaw));\n                    break;\n\n                default:\n                    children.push(consumer.call(this));\n            }\n        }\n\n        if (!this.scanner.eof) {\n            this.eat(RIGHTCURLYBRACKET);\n        }\n\n        return {\n            type: 'Block',\n            loc: this.getLocation(start, this.scanner.tokenStart),\n            children: children\n        };\n    },\n    generate: function(node) {\n        this.chunk('{');\n        this.children(node, function(prev) {\n            if (prev.type === 'Declaration') {\n                this.chunk(';');\n            }\n        });\n        this.chunk('}');\n    },\n    walkContext: 'block'\n};\n"]},"metadata":{},"sourceType":"script"}