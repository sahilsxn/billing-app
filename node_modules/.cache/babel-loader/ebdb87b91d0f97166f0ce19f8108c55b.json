{"ast":null,"code":"var isCustomProperty = require('../../utils/names').isCustomProperty;\n\nvar TYPE = require('../../tokenizer').TYPE;\n\nvar rawMode = require('./Raw').mode;\n\nvar IDENT = TYPE.Ident;\nvar HASH = TYPE.Hash;\nvar COLON = TYPE.Colon;\nvar SEMICOLON = TYPE.Semicolon;\nvar DELIM = TYPE.Delim;\nvar WHITESPACE = TYPE.WhiteSpace;\nvar EXCLAMATIONMARK = 0x0021; // U+0021 EXCLAMATION MARK (!)\n\nvar NUMBERSIGN = 0x0023; // U+0023 NUMBER SIGN (#)\n\nvar DOLLARSIGN = 0x0024; // U+0024 DOLLAR SIGN ($)\n\nvar AMPERSAND = 0x0026; // U+0026 ANPERSAND (&)\n\nvar ASTERISK = 0x002A; // U+002A ASTERISK (*)\n\nvar PLUSSIGN = 0x002B; // U+002B PLUS SIGN (+)\n\nvar SOLIDUS = 0x002F; // U+002F SOLIDUS (/)\n\nfunction consumeValueRaw(startToken) {\n  return this.Raw(startToken, rawMode.exclamationMarkOrSemicolon, true);\n}\n\nfunction consumeCustomPropertyRaw(startToken) {\n  return this.Raw(startToken, rawMode.exclamationMarkOrSemicolon, false);\n}\n\nfunction consumeValue() {\n  var startValueToken = this.scanner.tokenIndex;\n  var value = this.Value();\n\n  if (value.type !== 'Raw' && this.scanner.eof === false && this.scanner.tokenType !== SEMICOLON && this.scanner.isDelim(EXCLAMATIONMARK) === false && this.scanner.isBalanceEdge(startValueToken) === false) {\n    this.error();\n  }\n\n  return value;\n}\n\nmodule.exports = {\n  name: 'Declaration',\n  structure: {\n    important: [Boolean, String],\n    property: String,\n    value: ['Value', 'Raw']\n  },\n  parse: function () {\n    var start = this.scanner.tokenStart;\n    var startToken = this.scanner.tokenIndex;\n    var property = readProperty.call(this);\n    var customProperty = isCustomProperty(property);\n    var parseValue = customProperty ? this.parseCustomProperty : this.parseValue;\n    var consumeRaw = customProperty ? consumeCustomPropertyRaw : consumeValueRaw;\n    var important = false;\n    var value;\n    this.scanner.skipSC();\n    this.eat(COLON);\n    const valueStart = this.scanner.tokenIndex;\n\n    if (!customProperty) {\n      this.scanner.skipSC();\n    }\n\n    if (parseValue) {\n      value = this.parseWithFallback(consumeValue, consumeRaw);\n    } else {\n      value = consumeRaw.call(this, this.scanner.tokenIndex);\n    }\n\n    if (customProperty && value.type === 'Value' && value.children.isEmpty()) {\n      for (let offset = valueStart - this.scanner.tokenIndex; offset <= 0; offset++) {\n        if (this.scanner.lookupType(offset) === WHITESPACE) {\n          value.children.appendData({\n            type: 'WhiteSpace',\n            loc: null,\n            value: ' '\n          });\n          break;\n        }\n      }\n    }\n\n    if (this.scanner.isDelim(EXCLAMATIONMARK)) {\n      important = getImportant.call(this);\n      this.scanner.skipSC();\n    } // Do not include semicolon to range per spec\n    // https://drafts.csswg.org/css-syntax/#declaration-diagram\n\n\n    if (this.scanner.eof === false && this.scanner.tokenType !== SEMICOLON && this.scanner.isBalanceEdge(startToken) === false) {\n      this.error();\n    }\n\n    return {\n      type: 'Declaration',\n      loc: this.getLocation(start, this.scanner.tokenStart),\n      important: important,\n      property: property,\n      value: value\n    };\n  },\n  generate: function (node) {\n    this.chunk(node.property);\n    this.chunk(':');\n    this.node(node.value);\n\n    if (node.important) {\n      this.chunk(node.important === true ? '!important' : '!' + node.important);\n    }\n  },\n  walkContext: 'declaration'\n};\n\nfunction readProperty() {\n  var start = this.scanner.tokenStart;\n  var prefix = 0; // hacks\n\n  if (this.scanner.tokenType === DELIM) {\n    switch (this.scanner.source.charCodeAt(this.scanner.tokenStart)) {\n      case ASTERISK:\n      case DOLLARSIGN:\n      case PLUSSIGN:\n      case NUMBERSIGN:\n      case AMPERSAND:\n        this.scanner.next();\n        break;\n      // TODO: not sure we should support this hack\n\n      case SOLIDUS:\n        this.scanner.next();\n\n        if (this.scanner.isDelim(SOLIDUS)) {\n          this.scanner.next();\n        }\n\n        break;\n    }\n  }\n\n  if (prefix) {\n    this.scanner.skip(prefix);\n  }\n\n  if (this.scanner.tokenType === HASH) {\n    this.eat(HASH);\n  } else {\n    this.eat(IDENT);\n  }\n\n  return this.scanner.substrToCursor(start);\n} // ! ws* important\n\n\nfunction getImportant() {\n  this.eat(DELIM);\n  this.scanner.skipSC();\n  var important = this.consume(IDENT); // store original value in case it differ from `important`\n  // for better original source restoring and hacks like `!ie` support\n\n  return important === 'important' ? true : important;\n}","map":{"version":3,"sources":["/Users/macbook/Documents/GitHub/React 3/billing-app/node_modules/react-pdf-html/node_modules/css-tree/lib/syntax/node/Declaration.js"],"names":["isCustomProperty","require","TYPE","rawMode","mode","IDENT","Ident","HASH","Hash","COLON","Colon","SEMICOLON","Semicolon","DELIM","Delim","WHITESPACE","WhiteSpace","EXCLAMATIONMARK","NUMBERSIGN","DOLLARSIGN","AMPERSAND","ASTERISK","PLUSSIGN","SOLIDUS","consumeValueRaw","startToken","Raw","exclamationMarkOrSemicolon","consumeCustomPropertyRaw","consumeValue","startValueToken","scanner","tokenIndex","value","Value","type","eof","tokenType","isDelim","isBalanceEdge","error","module","exports","name","structure","important","Boolean","String","property","parse","start","tokenStart","readProperty","call","customProperty","parseValue","parseCustomProperty","consumeRaw","skipSC","eat","valueStart","parseWithFallback","children","isEmpty","offset","lookupType","appendData","loc","getImportant","getLocation","generate","node","chunk","walkContext","prefix","source","charCodeAt","next","skip","substrToCursor","consume"],"mappings":"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","sourcesContent":["var isCustomProperty = require('../../utils/names').isCustomProperty;\nvar TYPE = require('../../tokenizer').TYPE;\nvar rawMode = require('./Raw').mode;\n\nvar IDENT = TYPE.Ident;\nvar HASH = TYPE.Hash;\nvar COLON = TYPE.Colon;\nvar SEMICOLON = TYPE.Semicolon;\nvar DELIM = TYPE.Delim;\nvar WHITESPACE = TYPE.WhiteSpace;\nvar EXCLAMATIONMARK = 0x0021; // U+0021 EXCLAMATION MARK (!)\nvar NUMBERSIGN = 0x0023;      // U+0023 NUMBER SIGN (#)\nvar DOLLARSIGN = 0x0024;      // U+0024 DOLLAR SIGN ($)\nvar AMPERSAND = 0x0026;       // U+0026 ANPERSAND (&)\nvar ASTERISK = 0x002A;        // U+002A ASTERISK (*)\nvar PLUSSIGN = 0x002B;        // U+002B PLUS SIGN (+)\nvar SOLIDUS = 0x002F;         // U+002F SOLIDUS (/)\n\nfunction consumeValueRaw(startToken) {\n    return this.Raw(startToken, rawMode.exclamationMarkOrSemicolon, true);\n}\n\nfunction consumeCustomPropertyRaw(startToken) {\n    return this.Raw(startToken, rawMode.exclamationMarkOrSemicolon, false);\n}\n\nfunction consumeValue() {\n    var startValueToken = this.scanner.tokenIndex;\n    var value = this.Value();\n\n    if (value.type !== 'Raw' &&\n        this.scanner.eof === false &&\n        this.scanner.tokenType !== SEMICOLON &&\n        this.scanner.isDelim(EXCLAMATIONMARK) === false &&\n        this.scanner.isBalanceEdge(startValueToken) === false) {\n        this.error();\n    }\n\n    return value;\n}\n\nmodule.exports = {\n    name: 'Declaration',\n    structure: {\n        important: [Boolean, String],\n        property: String,\n        value: ['Value', 'Raw']\n    },\n    parse: function() {\n        var start = this.scanner.tokenStart;\n        var startToken = this.scanner.tokenIndex;\n        var property = readProperty.call(this);\n        var customProperty = isCustomProperty(property);\n        var parseValue = customProperty ? this.parseCustomProperty : this.parseValue;\n        var consumeRaw = customProperty ? consumeCustomPropertyRaw : consumeValueRaw;\n        var important = false;\n        var value;\n\n        this.scanner.skipSC();\n        this.eat(COLON);\n\n        const valueStart = this.scanner.tokenIndex;\n\n        if (!customProperty) {\n            this.scanner.skipSC();\n        }\n\n        if (parseValue) {\n            value = this.parseWithFallback(consumeValue, consumeRaw);\n        } else {\n            value = consumeRaw.call(this, this.scanner.tokenIndex);\n        }\n\n        if (customProperty && value.type === 'Value' && value.children.isEmpty()) {\n            for (let offset = valueStart - this.scanner.tokenIndex; offset <= 0; offset++) {\n                if (this.scanner.lookupType(offset) === WHITESPACE) {\n                    value.children.appendData({\n                        type: 'WhiteSpace',\n                        loc: null,\n                        value: ' '\n                    });\n                    break;\n                }\n            }\n        }\n\n        if (this.scanner.isDelim(EXCLAMATIONMARK)) {\n            important = getImportant.call(this);\n            this.scanner.skipSC();\n        }\n\n        // Do not include semicolon to range per spec\n        // https://drafts.csswg.org/css-syntax/#declaration-diagram\n\n        if (this.scanner.eof === false &&\n            this.scanner.tokenType !== SEMICOLON &&\n            this.scanner.isBalanceEdge(startToken) === false) {\n            this.error();\n        }\n\n        return {\n            type: 'Declaration',\n            loc: this.getLocation(start, this.scanner.tokenStart),\n            important: important,\n            property: property,\n            value: value\n        };\n    },\n    generate: function(node) {\n        this.chunk(node.property);\n        this.chunk(':');\n        this.node(node.value);\n\n        if (node.important) {\n            this.chunk(node.important === true ? '!important' : '!' + node.important);\n        }\n    },\n    walkContext: 'declaration'\n};\n\nfunction readProperty() {\n    var start = this.scanner.tokenStart;\n    var prefix = 0;\n\n    // hacks\n    if (this.scanner.tokenType === DELIM) {\n        switch (this.scanner.source.charCodeAt(this.scanner.tokenStart)) {\n            case ASTERISK:\n            case DOLLARSIGN:\n            case PLUSSIGN:\n            case NUMBERSIGN:\n            case AMPERSAND:\n                this.scanner.next();\n                break;\n\n            // TODO: not sure we should support this hack\n            case SOLIDUS:\n                this.scanner.next();\n                if (this.scanner.isDelim(SOLIDUS)) {\n                    this.scanner.next();\n                }\n                break;\n        }\n    }\n\n    if (prefix) {\n        this.scanner.skip(prefix);\n    }\n\n    if (this.scanner.tokenType === HASH) {\n        this.eat(HASH);\n    } else {\n        this.eat(IDENT);\n    }\n\n    return this.scanner.substrToCursor(start);\n}\n\n// ! ws* important\nfunction getImportant() {\n    this.eat(DELIM);\n    this.scanner.skipSC();\n\n    var important = this.consume(IDENT);\n\n    // store original value in case it differ from `important`\n    // for better original source restoring and hacks like `!ie` support\n    return important === 'important' ? true : important;\n}\n"]},"metadata":{},"sourceType":"script"}