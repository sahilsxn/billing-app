{"ast":null,"code":"var TYPE = require('../../tokenizer').TYPE;\n\nvar SEMICOLON = TYPE.Semicolon;\nvar LEFTCURLYBRACKET = TYPE.LeftCurlyBracket;\nmodule.exports = {\n  name: 'AtrulePrelude',\n  structure: {\n    children: [[]]\n  },\n  parse: function (name) {\n    var children = null;\n\n    if (name !== null) {\n      name = name.toLowerCase();\n    }\n\n    this.scanner.skipSC();\n\n    if (this.atrule.hasOwnProperty(name) && typeof this.atrule[name].prelude === 'function') {\n      // custom consumer\n      children = this.atrule[name].prelude.call(this);\n    } else {\n      // default consumer\n      children = this.readSequence(this.scope.AtrulePrelude);\n    }\n\n    this.scanner.skipSC();\n\n    if (this.scanner.eof !== true && this.scanner.tokenType !== LEFTCURLYBRACKET && this.scanner.tokenType !== SEMICOLON) {\n      this.error('Semicolon or block is expected');\n    }\n\n    if (children === null) {\n      children = this.createList();\n    }\n\n    return {\n      type: 'AtrulePrelude',\n      loc: this.getLocationFromList(children),\n      children: children\n    };\n  },\n  generate: function (node) {\n    this.children(node);\n  },\n  walkContext: 'atrulePrelude'\n};","map":{"version":3,"sources":["/Users/macbook/Documents/GitHub/React 3/billing-app/node_modules/react-pdf-html/node_modules/css-tree/lib/syntax/node/AtrulePrelude.js"],"names":["TYPE","require","SEMICOLON","Semicolon","LEFTCURLYBRACKET","LeftCurlyBracket","module","exports","name","structure","children","parse","toLowerCase","scanner","skipSC","atrule","hasOwnProperty","prelude","call","readSequence","scope","AtrulePrelude","eof","tokenType","error","createList","type","loc","getLocationFromList","generate","node","walkContext"],"mappings":"AAAA,IAAIA,IAAI,GAAGC,OAAO,CAAC,iBAAD,CAAP,CAA2BD,IAAtC;;AAEA,IAAIE,SAAS,GAAGF,IAAI,CAACG,SAArB;AACA,IAAIC,gBAAgB,GAAGJ,IAAI,CAACK,gBAA5B;AAEAC,MAAM,CAACC,OAAP,GAAiB;AACbC,EAAAA,IAAI,EAAE,eADO;AAEbC,EAAAA,SAAS,EAAE;AACPC,IAAAA,QAAQ,EAAE,CAAC,EAAD;AADH,GAFE;AAKbC,EAAAA,KAAK,EAAE,UAASH,IAAT,EAAe;AAClB,QAAIE,QAAQ,GAAG,IAAf;;AAEA,QAAIF,IAAI,KAAK,IAAb,EAAmB;AACfA,MAAAA,IAAI,GAAGA,IAAI,CAACI,WAAL,EAAP;AACH;;AAED,SAAKC,OAAL,CAAaC,MAAb;;AAEA,QAAI,KAAKC,MAAL,CAAYC,cAAZ,CAA2BR,IAA3B,KACA,OAAO,KAAKO,MAAL,CAAYP,IAAZ,EAAkBS,OAAzB,KAAqC,UADzC,EACqD;AACjD;AACAP,MAAAA,QAAQ,GAAG,KAAKK,MAAL,CAAYP,IAAZ,EAAkBS,OAAlB,CAA0BC,IAA1B,CAA+B,IAA/B,CAAX;AACH,KAJD,MAIO;AACH;AACAR,MAAAA,QAAQ,GAAG,KAAKS,YAAL,CAAkB,KAAKC,KAAL,CAAWC,aAA7B,CAAX;AACH;;AAED,SAAKR,OAAL,CAAaC,MAAb;;AAEA,QAAI,KAAKD,OAAL,CAAaS,GAAb,KAAqB,IAArB,IACA,KAAKT,OAAL,CAAaU,SAAb,KAA2BnB,gBAD3B,IAEA,KAAKS,OAAL,CAAaU,SAAb,KAA2BrB,SAF/B,EAE0C;AACtC,WAAKsB,KAAL,CAAW,gCAAX;AACH;;AAED,QAAId,QAAQ,KAAK,IAAjB,EAAuB;AACnBA,MAAAA,QAAQ,GAAG,KAAKe,UAAL,EAAX;AACH;;AAED,WAAO;AACHC,MAAAA,IAAI,EAAE,eADH;AAEHC,MAAAA,GAAG,EAAE,KAAKC,mBAAL,CAAyBlB,QAAzB,CAFF;AAGHA,MAAAA,QAAQ,EAAEA;AAHP,KAAP;AAKH,GAxCY;AAyCbmB,EAAAA,QAAQ,EAAE,UAASC,IAAT,EAAe;AACrB,SAAKpB,QAAL,CAAcoB,IAAd;AACH,GA3CY;AA4CbC,EAAAA,WAAW,EAAE;AA5CA,CAAjB","sourcesContent":["var TYPE = require('../../tokenizer').TYPE;\n\nvar SEMICOLON = TYPE.Semicolon;\nvar LEFTCURLYBRACKET = TYPE.LeftCurlyBracket;\n\nmodule.exports = {\n    name: 'AtrulePrelude',\n    structure: {\n        children: [[]]\n    },\n    parse: function(name) {\n        var children = null;\n\n        if (name !== null) {\n            name = name.toLowerCase();\n        }\n\n        this.scanner.skipSC();\n\n        if (this.atrule.hasOwnProperty(name) &&\n            typeof this.atrule[name].prelude === 'function') {\n            // custom consumer\n            children = this.atrule[name].prelude.call(this);\n        } else {\n            // default consumer\n            children = this.readSequence(this.scope.AtrulePrelude);\n        }\n\n        this.scanner.skipSC();\n\n        if (this.scanner.eof !== true &&\n            this.scanner.tokenType !== LEFTCURLYBRACKET &&\n            this.scanner.tokenType !== SEMICOLON) {\n            this.error('Semicolon or block is expected');\n        }\n\n        if (children === null) {\n            children = this.createList();\n        }\n\n        return {\n            type: 'AtrulePrelude',\n            loc: this.getLocationFromList(children),\n            children: children\n        };\n    },\n    generate: function(node) {\n        this.children(node);\n    },\n    walkContext: 'atrulePrelude'\n};\n"]},"metadata":{},"sourceType":"script"}