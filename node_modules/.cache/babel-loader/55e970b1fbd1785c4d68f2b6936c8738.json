{"ast":null,"code":"var TYPE = require('../../tokenizer').TYPE;\n\nvar COMMA = TYPE.Comma;\nmodule.exports = {\n  name: 'SelectorList',\n  structure: {\n    children: [['Selector', 'Raw']]\n  },\n  parse: function () {\n    var children = this.createList();\n\n    while (!this.scanner.eof) {\n      children.push(this.Selector());\n\n      if (this.scanner.tokenType === COMMA) {\n        this.scanner.next();\n        continue;\n      }\n\n      break;\n    }\n\n    return {\n      type: 'SelectorList',\n      loc: this.getLocationFromList(children),\n      children: children\n    };\n  },\n  generate: function (node) {\n    this.children(node, function () {\n      this.chunk(',');\n    });\n  },\n  walkContext: 'selector'\n};","map":{"version":3,"sources":["/Users/macbook/Documents/GitHub/React 3/billing-app/node_modules/react-pdf-html/node_modules/css-tree/lib/syntax/node/SelectorList.js"],"names":["TYPE","require","COMMA","Comma","module","exports","name","structure","children","parse","createList","scanner","eof","push","Selector","tokenType","next","type","loc","getLocationFromList","generate","node","chunk","walkContext"],"mappings":"AAAA,IAAIA,IAAI,GAAGC,OAAO,CAAC,iBAAD,CAAP,CAA2BD,IAAtC;;AAEA,IAAIE,KAAK,GAAGF,IAAI,CAACG,KAAjB;AAEAC,MAAM,CAACC,OAAP,GAAiB;AACbC,EAAAA,IAAI,EAAE,cADO;AAEbC,EAAAA,SAAS,EAAE;AACPC,IAAAA,QAAQ,EAAE,CAAC,CACP,UADO,EAEP,KAFO,CAAD;AADH,GAFE;AAQbC,EAAAA,KAAK,EAAE,YAAW;AACd,QAAID,QAAQ,GAAG,KAAKE,UAAL,EAAf;;AAEA,WAAO,CAAC,KAAKC,OAAL,CAAaC,GAArB,EAA0B;AACtBJ,MAAAA,QAAQ,CAACK,IAAT,CAAc,KAAKC,QAAL,EAAd;;AAEA,UAAI,KAAKH,OAAL,CAAaI,SAAb,KAA2Bb,KAA/B,EAAsC;AAClC,aAAKS,OAAL,CAAaK,IAAb;AACA;AACH;;AAED;AACH;;AAED,WAAO;AACHC,MAAAA,IAAI,EAAE,cADH;AAEHC,MAAAA,GAAG,EAAE,KAAKC,mBAAL,CAAyBX,QAAzB,CAFF;AAGHA,MAAAA,QAAQ,EAAEA;AAHP,KAAP;AAKH,GA3BY;AA4BbY,EAAAA,QAAQ,EAAE,UAASC,IAAT,EAAe;AACrB,SAAKb,QAAL,CAAca,IAAd,EAAoB,YAAW;AAC3B,WAAKC,KAAL,CAAW,GAAX;AACH,KAFD;AAGH,GAhCY;AAiCbC,EAAAA,WAAW,EAAE;AAjCA,CAAjB","sourcesContent":["var TYPE = require('../../tokenizer').TYPE;\n\nvar COMMA = TYPE.Comma;\n\nmodule.exports = {\n    name: 'SelectorList',\n    structure: {\n        children: [[\n            'Selector',\n            'Raw'\n        ]]\n    },\n    parse: function() {\n        var children = this.createList();\n\n        while (!this.scanner.eof) {\n            children.push(this.Selector());\n\n            if (this.scanner.tokenType === COMMA) {\n                this.scanner.next();\n                continue;\n            }\n\n            break;\n        }\n\n        return {\n            type: 'SelectorList',\n            loc: this.getLocationFromList(children),\n            children: children\n        };\n    },\n    generate: function(node) {\n        this.children(node, function() {\n            this.chunk(',');\n        });\n    },\n    walkContext: 'selector'\n};\n"]},"metadata":{},"sourceType":"script"}