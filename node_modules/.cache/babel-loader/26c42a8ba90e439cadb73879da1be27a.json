{"ast":null,"code":"function noop(value) {\n  return value;\n}\n\nfunction generateMultiplier(multiplier) {\n  if (multiplier.min === 0 && multiplier.max === 0) {\n    return '*';\n  }\n\n  if (multiplier.min === 0 && multiplier.max === 1) {\n    return '?';\n  }\n\n  if (multiplier.min === 1 && multiplier.max === 0) {\n    return multiplier.comma ? '#' : '+';\n  }\n\n  if (multiplier.min === 1 && multiplier.max === 1) {\n    return '';\n  }\n\n  return (multiplier.comma ? '#' : '') + (multiplier.min === multiplier.max ? '{' + multiplier.min + '}' : '{' + multiplier.min + ',' + (multiplier.max !== 0 ? multiplier.max : '') + '}');\n}\n\nfunction generateTypeOpts(node) {\n  switch (node.type) {\n    case 'Range':\n      return ' [' + (node.min === null ? '-∞' : node.min) + ',' + (node.max === null ? '∞' : node.max) + ']';\n\n    default:\n      throw new Error('Unknown node type `' + node.type + '`');\n  }\n}\n\nfunction generateSequence(node, decorate, forceBraces, compact) {\n  var combinator = node.combinator === ' ' || compact ? node.combinator : ' ' + node.combinator + ' ';\n  var result = node.terms.map(function (term) {\n    return generate(term, decorate, forceBraces, compact);\n  }).join(combinator);\n\n  if (node.explicit || forceBraces) {\n    result = (compact || result[0] === ',' ? '[' : '[ ') + result + (compact ? ']' : ' ]');\n  }\n\n  return result;\n}\n\nfunction generate(node, decorate, forceBraces, compact) {\n  var result;\n\n  switch (node.type) {\n    case 'Group':\n      result = generateSequence(node, decorate, forceBraces, compact) + (node.disallowEmpty ? '!' : '');\n      break;\n\n    case 'Multiplier':\n      // return since node is a composition\n      return generate(node.term, decorate, forceBraces, compact) + decorate(generateMultiplier(node), node);\n\n    case 'Type':\n      result = '<' + node.name + (node.opts ? decorate(generateTypeOpts(node.opts), node.opts) : '') + '>';\n      break;\n\n    case 'Property':\n      result = '<\\'' + node.name + '\\'>';\n      break;\n\n    case 'Keyword':\n      result = node.name;\n      break;\n\n    case 'AtKeyword':\n      result = '@' + node.name;\n      break;\n\n    case 'Function':\n      result = node.name + '(';\n      break;\n\n    case 'String':\n    case 'Token':\n      result = node.value;\n      break;\n\n    case 'Comma':\n      result = ',';\n      break;\n\n    default:\n      throw new Error('Unknown node type `' + node.type + '`');\n  }\n\n  return decorate(result, node);\n}\n\nmodule.exports = function (node, options) {\n  var decorate = noop;\n  var forceBraces = false;\n  var compact = false;\n\n  if (typeof options === 'function') {\n    decorate = options;\n  } else if (options) {\n    forceBraces = Boolean(options.forceBraces);\n    compact = Boolean(options.compact);\n\n    if (typeof options.decorate === 'function') {\n      decorate = options.decorate;\n    }\n  }\n\n  return generate(node, decorate, forceBraces, compact);\n};","map":{"version":3,"sources":["/Users/macbook/Documents/GitHub/React 3/billing-app/node_modules/react-pdf-html/node_modules/css-tree/lib/definition-syntax/generate.js"],"names":["noop","value","generateMultiplier","multiplier","min","max","comma","generateTypeOpts","node","type","Error","generateSequence","decorate","forceBraces","compact","combinator","result","terms","map","term","generate","join","explicit","disallowEmpty","name","opts","module","exports","options","Boolean"],"mappings":"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","sourcesContent":["function noop(value) {\n    return value;\n}\n\nfunction generateMultiplier(multiplier) {\n    if (multiplier.min === 0 && multiplier.max === 0) {\n        return '*';\n    }\n\n    if (multiplier.min === 0 && multiplier.max === 1) {\n        return '?';\n    }\n\n    if (multiplier.min === 1 && multiplier.max === 0) {\n        return multiplier.comma ? '#' : '+';\n    }\n\n    if (multiplier.min === 1 && multiplier.max === 1) {\n        return '';\n    }\n\n    return (\n        (multiplier.comma ? '#' : '') +\n        (multiplier.min === multiplier.max\n            ? '{' + multiplier.min + '}'\n            : '{' + multiplier.min + ',' + (multiplier.max !== 0 ? multiplier.max : '') + '}'\n        )\n    );\n}\n\nfunction generateTypeOpts(node) {\n    switch (node.type) {\n        case 'Range':\n            return (\n                ' [' +\n                (node.min === null ? '-∞' : node.min) +\n                ',' +\n                (node.max === null ? '∞' : node.max) +\n                ']'\n            );\n\n        default:\n            throw new Error('Unknown node type `' + node.type + '`');\n    }\n}\n\nfunction generateSequence(node, decorate, forceBraces, compact) {\n    var combinator = node.combinator === ' ' || compact ? node.combinator : ' ' + node.combinator + ' ';\n    var result = node.terms.map(function(term) {\n        return generate(term, decorate, forceBraces, compact);\n    }).join(combinator);\n\n    if (node.explicit || forceBraces) {\n        result = (compact || result[0] === ',' ? '[' : '[ ') + result + (compact ? ']' : ' ]');\n    }\n\n    return result;\n}\n\nfunction generate(node, decorate, forceBraces, compact) {\n    var result;\n\n    switch (node.type) {\n        case 'Group':\n            result =\n                generateSequence(node, decorate, forceBraces, compact) +\n                (node.disallowEmpty ? '!' : '');\n            break;\n\n        case 'Multiplier':\n            // return since node is a composition\n            return (\n                generate(node.term, decorate, forceBraces, compact) +\n                decorate(generateMultiplier(node), node)\n            );\n\n        case 'Type':\n            result = '<' + node.name + (node.opts ? decorate(generateTypeOpts(node.opts), node.opts) : '') + '>';\n            break;\n\n        case 'Property':\n            result = '<\\'' + node.name + '\\'>';\n            break;\n\n        case 'Keyword':\n            result = node.name;\n            break;\n\n        case 'AtKeyword':\n            result = '@' + node.name;\n            break;\n\n        case 'Function':\n            result = node.name + '(';\n            break;\n\n        case 'String':\n        case 'Token':\n            result = node.value;\n            break;\n\n        case 'Comma':\n            result = ',';\n            break;\n\n        default:\n            throw new Error('Unknown node type `' + node.type + '`');\n    }\n\n    return decorate(result, node);\n}\n\nmodule.exports = function(node, options) {\n    var decorate = noop;\n    var forceBraces = false;\n    var compact = false;\n\n    if (typeof options === 'function') {\n        decorate = options;\n    } else if (options) {\n        forceBraces = Boolean(options.forceBraces);\n        compact = Boolean(options.compact);\n        if (typeof options.decorate === 'function') {\n            decorate = options.decorate;\n        }\n    }\n\n    return generate(node, decorate, forceBraces, compact);\n};\n"]},"metadata":{},"sourceType":"script"}